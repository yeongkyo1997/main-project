input {
    jdbc {
        ##### 1단계 ##### => 매번 똑같은 데이터를 계속 가지고옴
        # jdbc_driver_library => "/usr/share/logstash/mysql-connector-java-8.0.28.jar"
        # jdbc_driver_class => "com.mysql.cj.jdbc.Driver"
        # jdbc_connection_string => "jdbc:mysql://my-database:3306/mydockerclass"
        # jdbc_user => "root"
        # jdbc_password => "1234"
        # schedule => "* * * * *"
        # statement => "select * from product"

        #### 2단계 #####
        # jdbc_driver_library => "/usr/share/logstash/mysql-connector-java-8.0.28.jar"
        # jdbc_driver_class => "com.mysql.cj.jdbc.Driver"
        # jdbc_connection_string => "jdbc:mysql://my-database:3306/mydockerclass"
        # jdbc_user => "root"
        # jdbc_password => "1234"
        # schedule => "* * * * *"
        # use_column_value => true
        # tracking_column => "updatedat"
        # tracking_column_type => "timestamp"
        # last_run_metadata_path => "./aaa.txt"
        # statement => "select id, name, price, updatedat from product where updatedat > :sql_last_value order by updatedat asc"

        #### 3단계 #####
        jdbc_driver_library => "/usr/share/logstash/mysql-connector-java-8.0.28.jar"
        jdbc_driver_class => "com.mysql.cj.jdbc.Driver"
        jdbc_connection_string => "jdbc:mysql://my-database:3306/mydocker04"
        jdbc_user => "root"
        jdbc_password => "1234"
        schedule => "*/10 * * * * *"
        use_column_value => true
        tracking_column => "updatedat"
        tracking_column_type => "numeric"
        last_run_metadata_path => "./log_updateat.txt"
        statement => "select *, unix_timestamp(updatedat) as updatedat from product where unix_timestamp(updatedat) > :sql_last_value order by updatedat asc"
    }
}

filter {
    mutate {
        copy => { "id" => "[@metadata][_id]" }
        remove_field => ["@version", "@timestamp"]
        # playground의 컬럼명과 일치  시켜줘야함
        rename => {
            "starrate" => "starRate"
            "isdiploma" => "isDiploma"
            "deletedat" => "deletedAt"
            "updatedat" => "updatedAt"
            "subcategory" => "subCategory"

        }
    }
}

output {
		elasticsearch {
        hosts => "elasticsearch:9200"
        document_id => "%{[@metadata][_id]}"
        template => "/usr/share/logstash/config-elasticsearch.json"
        index => "myproduct"
    }
}